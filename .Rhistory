df_encounters_freq
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
count(cut_width(ContactAge, width = 1, boundary = 0))
df_encounters_freq
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0)`)
df_encounters_freq %>%
ggplot(aes(x = bin, y = log10(n), color = GENEPOS_comb)) +
geom_violin() +
theme_classic()
df_encounters_freq %>%
ggplot(aes(x = bin, y = log10(n), color = GENEPOS_comb)) +
geom_boxplot() +
theme_classic()
df_encounters_freq %>%
ggplot(aes(x = bin, y = n, color = GENEPOS_comb)) +
geom_boxplot() +
theme_classic()
?cut_width
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F))
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0)`)
df_encounters_freq
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`)
df_encounters_freq %>%
ggplot(aes(x = bin, y = n, color = GENEPOS_comb)) +
geom_boxplot() +
theme_classic()
df_encounters_freq %>%
ggplot(aes(x = bin, y = n, color = GENEPOS_comb)) +
geom_point() +
theme_classic()
df_encounters_freq %>%
ggplot(aes(x = bin, y = log10(n), color = GENEPOS_comb)) +
geom_point() +
theme_classic()
df_encounters_freq %>%
ggplot(aes(x = bin, y = n, color = GENEPOS_comb)) +
geom_point() +
theme_classic()
df_encounters_freq %>%
ungroup() %>%
ggplot(aes(x = bin, y = n, color = GENEPOS_comb)) +
geom_point() +
theme_classic()
df_encounters_freq
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
summarize(count = sum(n))
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F))
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
summarize(count = sum(n))
df_encounters_freq
df_encounters_freq %>%
ggplot(aes(x = bin, y = n, color = GENEPOS_comb)) +
geom_point() +
theme_classic()
df_encounters_freq %>%
ggplot(aes(x = bin, y = count, color = GENEPOS_comb)) +
geom_point() +
theme_classic()
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
summarize(count = mean(n))
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F))
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(count = mean(n))
df_encounters_freq %>%
ggplot(aes(x = bin, y = count, color = GENEPOS_comb)) +
geom_point() +
theme_classic()
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(count = mean(n), sd = sd(n))
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F))
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(count = mean(n), sd = sd(n))
df_encounters_freq %>%
ggplot(aes(x = bin, y = count, color = GENEPOS_comb)) +
geom_point() +
theme_classic()
df_encounters_freq %>%
ggplot(aes(x = bin, y = count, color = GENEPOS_comb)) +
geom_smooth(se = FALSE) +
stat_summary(fun.data = sd, geom = "ribbon", alpha = 0.25) +
theme_classic()
df_encounters_freq %>%
ggplot(aes(x = bin, y = count, color = GENEPOS_comb)) +
geom_smooth(se = FALSE) +
theme_classic()
df_encounters_freq %>%
ggplot(aes(x = bin, y = count, color = GENEPOS_comb)) +
geom_smooth(se = T) +
theme_classic()
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F))
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(mean = mean(n), sd = sd(n))
df_encounters_freq %>%
ggplot(aes(x = bin, y = mean, color = GENEPOS_comb)) +
geom_smooth(se = TRUE) +
theme_classic()
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(mean = mean(n), sd = sd(n)) +
coord_cartesian(xlim = c(0, 25))
df_encounters_freq %>%
ggplot(aes(x = bin, y = mean, color = GENEPOS_comb)) +
geom_smooth(se = TRUE) +
theme_classic()  +
coord_cartesian(xlim = c(0, 25))
df_encounters_freq %>%
ggplot(aes(x = bin, y = mean, color = GENEPOS_comb, fill = GENEPOS_comb)) +
geom_smooth(se = TRUE) +
theme_classic() +
coord_cartesian(xlim = c(0, 25))
# plot: unique concept ID over count for each group
df_encounters_age %>%
ggplot(aes(x = ContactAge, y = count, color = GENEPOS_comb)) +
geom_point() +
geom_smooth() +
theme_classic() +
coord_cartesian(xlim = c(0, 25))
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(mean = mean(n), sd = sd(n))
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F))
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(mean = mean(n), sd = sd(n))
df_encounters_freq %>%
ggplot(aes(x = bin, y = mean, color = GENEPOS_comb, fill = GENEPOS_comb)) +
geom_smooth(se = TRUE) +
theme_classic() +
coord_cartesian(xlim = c(0, 25))
df_encounters_freq
df_encounters_freq %>%
ggplot(aes(x = bin-1, y = mean, color = GENEPOS_comb, fill = GENEPOS_comb)) +
geom_smooth(se = TRUE) +
theme_classic() +
coord_cartesian(xlim = c(0, 25))
df_encounters_freq %>%
ggplot(aes(x = bin-1, y = mean, color = GENEPOS_comb, fill = GENEPOS_comb)) +
geom_smooth(se = TRUE) +
theme_classic() +
coord_cartesian(xlim = c(0, 26))
df_encounters_freq %>%
ggplot(aes(x = bin-1, y = mean, color = GENEPOS_comb, fill = GENEPOS_comb)) +
geom_smooth(se = TRUE) +
theme_classic() +
coord_cartesian(xlim = c(0, 25))
?coord_cartesian
df_encounters_freq %>%
ggplot(aes(x = bin-1, y = mean, color = GENEPOS_comb, fill = GENEPOS_comb)) +
geom_smooth(se = TRUE) +
theme_classic() +
coord_cartesian(xlim = c(0, 25), expand = FALSE)
df_encounters_freq %>%
ggplot(aes(x = bin-1, y = mean, color = GENEPOS_comb, fill = GENEPOS_comb)) +
geom_smooth(se = TRUE) +
theme_classic() +
coord_cartesian(xlim = c(0, 25), expand = FALSE) +
ylab("Mean number of encounters") +
xlab("Age (years)")
# plot: unique concept ID over count for each group
df_encounters_age %>%
ggplot(aes(x = ContactAge, y = count, color = GENEPOS_comb)) +
geom_point() +
geom_smooth() +
theme_classic() +
coord_cartesian(xlim = c(0, 25)) +
ylab("Mean number of concepts per encounter") +
xlab("Age (years)")
# plot: unique concept ID over count for each group
df_encounters_age %>%
ggplot(aes(x = ContactAge, y = count, color = GENEPOS_comb, fill = GENEPOS_comb)) +
geom_point() +
geom_smooth() +
theme_classic() +
coord_cartesian(xlim = c(0, 25)) +
ylab("Mean number of concepts per encounter") +
xlab("Age (years)")
df %>%
group_by(PatientId) %>%
mutate(encounter_freq = n_distinct(ContactAge))
df
df %>%
group_by(PatientId) %>%
mutate(encounter_freq = n_distinct(ContactAge))
df[df$PatientId == "140Z816638", ]
view(df[df$PatientId == "140Z816638", ])
df
id <- "140Z816638"
length(unique(df[df$PatientId == id]$ContactAge))
length(unique(df[df$PatientId == id,]$ContactAge))
## table of relative encounter frequency
df_encounters <- df %>%
group_by(PatientId) %>%
mutate(encounter_freq = n_distinct(ContactAge)) %>%
distinct(PatientId, GENEPOS_comb, encounter_freq)
df_encounters
df %>%
group_by(PatientId)
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F))
df_encounters_freq
df
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
select(-ConceptID) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F))
df_encounters_freq
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
# select(-ConceptID) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F))
df_encounters_freq
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
select(-ConceptID) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F))
df
df %>%
group_by(PatientId) %>%
select(-ConceptID)
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
select(-ConceptID) %>%
distinct(PatientId, GENEPOS_comb, ContactAge) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F))
df_encounters_freq
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(mean = mean(n), sd = sd(n))
df_encounters_freq %>%
ggplot(aes(x = bin-1, y = mean, color = GENEPOS_comb, fill = GENEPOS_comb)) +
geom_smooth(se = TRUE) +
theme_classic() +
coord_cartesian(xlim = c(0, 25), expand = FALSE) +
ylab("Mean number of encounters") +
xlab("Age (years)")
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
select(-ConceptID) %>%
distinct(PatientId, GENEPOS_comb, ContactAge) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F))
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = .5, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(mean = mean(n), sd = sd(n))
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
select(-ConceptID) %>%
distinct(PatientId, GENEPOS_comb, ContactAge) %>%
count(cut_width(ContactAge, width = .5, boundary = 0, labels = F))
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = .5, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(mean = mean(n), sd = sd(n))
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 0.5, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(mean = mean(n), sd = sd(n))
df_encounters_freq %>%
ggplot(aes(x = bin-1, y = mean, color = GENEPOS_comb, fill = GENEPOS_comb)) +
geom_smooth(se = TRUE) +
theme_classic() +
coord_cartesian(xlim = c(0, 25), expand = FALSE) +
ylab("Mean number of encounters") +
xlab("Age (years)")
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
select(-ConceptID) %>%
distinct(PatientId, GENEPOS_comb, ContactAge) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F))
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(mean = mean(n), sd = sd(n))
df_encounters_freq %>%
ggplot(aes(x = bin-1, y = mean, color = GENEPOS_comb, fill = GENEPOS_comb)) +
geom_smooth(se = TRUE) +
theme_classic() +
coord_cartesian(xlim = c(0, 25), expand = FALSE) +
ylab("Mean number of encounters") +
xlab("Age (years)")
p9 <- df_encounters_freq %>%
ggplot(aes(x = bin-1, y = mean, color = GENEPOS_comb, fill = GENEPOS_comb)) +
geom_smooth(se = TRUE) +
theme_classic() +
coord_cartesian(xlim = c(0, 25), expand = FALSE) +
ylab("Mean number of encounters") +
xlab("Age (years)")
# plot: unique concept ID over count for each group
p10 <- df_encounters_age %>%
ggplot(aes(x = ContactAge, y = count, color = GENEPOS_comb, fill = GENEPOS_comb)) +
geom_point() +
geom_smooth() +
theme_classic() +
coord_cartesian(xlim = c(0, 25)) +
ylab("Mean number of concepts per encounter") +
xlab("Age (years)")
p9
p10
# plot: unique concept ID over count for each group
p10 <- df_encounters_age %>%
ggplot(aes(x = ContactAge, y = count, color = GENEPOS_comb, fill = GENEPOS_comb)) +
geom_point() +
geom_smooth() +
theme_classic() +
coord_cartesian(xlim = c(0, 25), expand = FALSE) +
ylab("Mean number of concepts per encounter") +
xlab("Age (years)")
p10
df_encounters_freq
df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`)
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
select(-ConceptID) %>%
distinct(PatientId, GENEPOS_comb, ContactAge) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F))
df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`)
df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
ggplot(aes(x = bin-1, y = n, color = GENEPOS_comb, fill = GENEPOS_comb)) +
geom_point() +
geom_smooth()
p9 <- df_encounters_freq %>%
ggplot(aes(x = bin-1, y = mean, color = GENEPOS_comb, fill = GENEPOS_comb)) +
geom_smooth(se = TRUE) +
theme_classic() +
coord_cartesian(xlim = c(0, 25), expand = FALSE) +
ylab("Mean number of encounters") +
xlab("Age (years)")
# plot: unique concept ID over count for each group
p10 <- df_encounters_age %>%
ggplot(aes(x = ContactAge, y = count, color = GENEPOS_comb, fill = GENEPOS_comb)) +
geom_point() +
geom_smooth() +
theme_classic() +
coord_cartesian(xlim = c(0, 25), expand = FALSE) +
ylab("Mean number of concepts per encounter") +
xlab("Age (years)")
p9
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
select(-ConceptID) %>%
distinct(PatientId, GENEPOS_comb, ContactAge) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F))
df_encounters_freq <- df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(mean = mean(n), sd = sd(n))
p9 <- df_encounters_freq %>%
ggplot(aes(x = bin-1, y = mean, color = GENEPOS_comb, fill = GENEPOS_comb)) +
geom_smooth(se = TRUE) +
theme_classic() +
coord_cartesian(xlim = c(0, 25), expand = FALSE) +
ylab("Mean number of encounters") +
xlab("Age (years)")
p9
p10
gc()
