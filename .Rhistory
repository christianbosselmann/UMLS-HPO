res$plot
res$forest
view(df_concept)
# merge with full df
df_concept <- cbind(concept_vis_input.df3, concept_odds)
df_concept <- df_concept %>%
ungroup()
# plot
res$forest <- df_concept %>%
# keep n best
slice_max(order_by = OR, n = 10, with_ties = FALSE) %>%
ggplot(aes(y = description)) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic()
res$forest
view(df_concept)
# plot
res$forest <- df_concept %>%
# keep n best
slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
ggplot(aes(y = description)) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic()
res$forest
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% c("Febrile seizure", "Micropenis")) %>%
ggplot(aes(y = description)) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic()
res$forest
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% c("Seizure", "Micropenis")) %>%
ggplot(aes(y = description)) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic()
res$forest
# filter: custom terms to display
vec_terms <- c("Abnormality of the genitourinary system",
"Abnormality of the skeletal system",
"Abnormality of the cardiovascular system",
"Abnormality of the nervous system")
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% vec_terms) %>%
ggplot(aes(y = description)) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic()
res$forest
view(df_concept)
# filter: custom terms to display
vec_terms <- c("Abnormality of the genitourinary system",
"Abnormality of the skeletal system",
"Abnormality of the cardiovascular system",
"Abnormality of the nervous system",
"Abnormality of the digestive system",
"Abnormal respiratory system physiology",
"Neurodevelopmental abnormality"
)
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% vec_terms) %>%
ggplot(aes(y = description)) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic()
res$forest
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% vec_terms) %>%
ggplot(aes(y = description)) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic() +
xlab("") +
ylab("Odds ratio (95% CI, log scale)")
res$forest
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% vec_terms) %>%
ggplot(aes(y = description)) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic() +
ylab("") +
xlab("Odds ratio (95% CI, log scale)")
res$forest
# filter: custom terms to display
vec_terms <- c("Neurodevelopmental abnormality",
"Complex febrile seizure",
"Abnormality of the genitourinary system",
"Abnormality of the skeletal system",
"Abnormality of the cardiovascular system",
"Abnormality of the nervous system",
"Abnormality of the digestive system",
"Abnormal respiratory system physiology"
)
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% vec_terms) %>%
ggplot(aes(y = description)) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic() +
ylab("") +
xlab("Odds ratio (95% CI, log scale)")
res$forest
# filter: custom terms to display
vec_terms <- c("Neurodevelopmental abnormality",
"Intellectual disability",
"Abnormality of the genitourinary system",
"Abnormality of the skeletal system",
"Abnormality of the cardiovascular system",
"Abnormality of the nervous system",
"Abnormality of the digestive system",
"Abnormal respiratory system physiology"
)
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% vec_terms) %>%
ggplot(aes(y = description)) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic() +
ylab("") +
xlab("Odds ratio (95% CI, log scale)")
res$forest
# filter: custom terms to display
vec_terms <- c("Neurodevelopmental abnormality",
"Neoplasm",
"Abnormality of the genitourinary system",
"Abnormality of the skeletal system",
"Abnormality of the cardiovascular system",
"Abnormality of the nervous system",
"Abnormality of the digestive system",
"Abnormal respiratory system physiology"
)
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% vec_terms) %>%
ggplot(aes(y = description)) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic() +
ylab("") +
xlab("Odds ratio (95% CI, log scale)")
res$forest
# filter: custom terms to display
vec_terms <- c("Neurodevelopmental abnormality",
"Abnormality of prenatal development or birth",
"Abnormality of the genitourinary system",
"Abnormality of the skeletal system",
"Abnormality of the cardiovascular system",
"Abnormality of the nervous system",
"Abnormality of the digestive system",
"Abnormal respiratory system physiology"
)
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% vec_terms) %>%
ggplot(aes(y = description)) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic() +
ylab("") +
xlab("Odds ratio (95% CI, log scale)")
res$forest
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% vec_terms) %>%
ggplot(aes(y = order(description, desc(OR)))) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic() +
ylab("") +
xlab("Odds ratio (95% CI, log scale)")
res$forest
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% vec_terms) %>%
ggplot(aes(y = description))) +
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% vec_terms) %>%
ggplot(aes(y = description)) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic() +
ylab("") +
xlab("Odds ratio (95% CI, log scale)")
res$forest
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% vec_terms) %>%
ggplot(aes(y = reorder(description, -OR))) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic() +
ylab("") +
xlab("Odds ratio (95% CI, log scale)")
res$forest
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% vec_terms) %>%
ggplot(aes(y = reorder(description, OR))) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic() +
ylab("") +
xlab("Odds ratio (95% CI, log scale)")
res$forest
# filter: custom terms to display
vec_terms <- c("Phenotypic abnormality",
"Neurodevelopmental abnormality",
"Abnormality of prenatal development or birth",
"Abnormality of the genitourinary system",
"Abnormality of the skeletal system",
"Abnormality of the cardiovascular system",
"Abnormality of the nervous system",
"Abnormality of the digestive system",
"Abnormal respiratory system physiology"
)
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% vec_terms) %>%
ggplot(aes(y = reorder(description, OR))) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic() +
ylab("") +
xlab("Odds ratio (95% CI, log scale)")
res$forest
# filter: custom terms to display
vec_terms <- c("Neurodevelopmental abnormality",
"Abnormality of metabolism/homeostasis",
"Abnormality of prenatal development or birth",
"Abnormality of the genitourinary system",
"Abnormality of the skeletal system",
"Abnormality of the cardiovascular system",
"Abnormality of the nervous system",
"Abnormality of the digestive system",
"Abnormal respiratory system physiology"
)
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% vec_terms) %>%
ggplot(aes(y = reorder(description, OR))) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic() +
ylab("") +
xlab("Odds ratio (95% CI, log scale)")
res$forest
# filter: custom terms to display
vec_terms <- c("Neurodevelopmental abnormality",
"Abnormality of metabolism/homeostasis",
"Abnormality of prenatal development or birth",
"Abnormality of the immune system",
"Abnormality of the genitourinary system",
"Abnormality of the skeletal system",
"Abnormality of the cardiovascular system",
"Abnormality of the nervous system",
"Abnormality of the digestive system",
"Abnormal respiratory system physiology"
)
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% vec_terms) %>%
ggplot(aes(y = reorder(description, OR))) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic() +
ylab("") +
xlab("Odds ratio (95% CI, log scale)")
res$forest
### visualize relative term frequency as enrichment plot
#' @param data data.frame of Surgery, ConceptID (UMLS), term (HPO), and two groups to compare (TRUE; FALSE)
#' @param ontology HPO ontologyIndex object
#' @param forest logical flag; whether to calculate OR and draw a Forest plot
#' @return res list of data.frame and plot object
enrichmentPlot <- function(data,
ontology,
forest = FALSE){
# object to return
res <- list()
# read term names from ontologyIndex object
desc_map <- tibble(term = ontology$id,
description = ontology$name)
# reshape to dataframe of terms and columns Y/N for term count in group/!group
df_group <- data %>%
group_by(term) %>%
count(group) %>%
pivot_wider(names_from = group, values_from = n) %>%
rename(N = `FALSE`, Y = `TRUE`) %>%
replace(is.na(.), 0)
# add in term descriptions for graph
df_group <- left_join(df_group, desc_map, by = "term")
# # filter: by ancestors, as in longitudinal plot
# min_set <- ontologyIndex::minimal_set(ontology, df_group$term)
# df_group <- df_group[df_group$term %in% min_set, ]
# data characteristics
Y_tot <- max(df_group$Y) # total number of observations in group
N_tot <- max(df_group$N) # total number of observations in !group
n_tests <- nrow(df_group) # number of multiple tests
# setup plot
concept_vis_input.df3 <- df_group %>%
mutate(Y_out = Y_tot-Y,
N_out = N_tot-N) %>%
mutate(pvalue = fish_test_it(Y,Y_out,N,N_out,"pvalue"),
odds = fish_test_it(Y,Y_out,N,N_out,"odds"),
freq1 = Y/Y_tot,
freq2 = N/N_tot,
color_sig = ifelse(p.adjust(pvalue, "holm") < 0.001, "<", ">"),
size_sel = -log10(pvalue)*4)
# %>%
#   filter(freq1 > 0.05 | freq2 > 0.05) # minimum term frequency filter
res$data <- concept_vis_input.df3
max_freq <- c(concept_vis_input.df3$freq1, concept_vis_input.df3$freq2) %>% max()
# n of top p-values to label
top_sig <- head(sort(concept_vis_input.df3$pvalue, decreasing = FALSE), n = 15)
# plot
res$plot <- concept_vis_input.df3 %>%
mutate(expcat_text = ifelse(pvalue %in% top_sig, description, NA)) %>%
ggplot(aes(x = freq2, y = freq1, color = color_sig)) +
geom_point(aes(size = size_sel), show.legend = FALSE) +
theme_classic(base_size = 20) +
# coord_fixed(xlim = c(0, 0.25), ylim = c(0, 0.25)) +
coord_cartesian(xlim = c(0, max_freq), ylim = c(0, max_freq)) +
geom_abline(slope = 1, linetype = "dashed") +
scale_color_manual(values = c("red", "black")) +
labs(y = "Case",
x = "Control") +
geom_label_repel(aes(label = expcat_text),
color = "black",
max.overlaps = 8,
size = 3,
force_pull = 0.2,
min.segment.length = 0) +
theme(axis.text = element_text(color = "black"),
axis.line = element_line(color = "black")) +
guides(color = "none")
# we can also use this function to return a Forest plot
if(forest == TRUE){
# redo OR with confidence interval, assign to preallocated dataframe
concept_odds <- data.frame(OR = 1:nrow(concept_vis_input.df3),
CI1 = 1:nrow(concept_vis_input.df3),
CI2 = 1:nrow(concept_vis_input.df3))
for(i in 1:nrow(concept_vis_input.df3)){
row <- concept_vis_input.df3[i, ] %>%
ungroup() %>%
select(Y, Y_out, N, N_out) %>%
data.matrix()
mat <- matrix(data = row, nrow=2)
fish <- fisher.test(mat)
concept_odds$OR[i] <- fish$estimate
concept_odds$CI1[i] <- fish$conf.int[[1]] # lower bound
concept_odds$CI2[i] <- fish$conf.int[[2]] # upper bound
}
# merge with full df
df_concept <- cbind(concept_vis_input.df3, concept_odds)
df_concept <- df_concept %>%
ungroup()
# # only keep significant OR
# filter(CI1 > 1) %>%
# # only keep significant observations after correction
# filter(color_sig == "<")
# # filter: by ancestors
# min_set <- ontologyIndex::minimal_set(ont_hpo, df_concept$term)
# df_concept <- df_concept[df_concept$term %in% min_set, ]
# filter: custom terms to display
vec_terms <- c("Neurodevelopmental abnormality",
"Abnormality of metabolism/homeostasis",
"Abnormality of prenatal development or birth",
"Abnormality of the immune system",
"Abnormality of the genitourinary system",
"Abnormality of the skeletal system",
"Abnormality of the cardiovascular system",
"Abnormality of the nervous system",
"Abnormality of the digestive system",
"Abnormal respiratory system physiology"
)
# plot
res$forest <- df_concept %>%
# # keep n best
# slice_max(order_by = OR, n = 8, with_ties = FALSE) %>%
filter(description %in% vec_terms) %>%
ggplot(aes(y = reorder(description, OR))) +
geom_point(aes(x = OR), shape = 15, size = 3) +
geom_linerange(aes(xmin = CI1, xmax = CI2)) +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(trans = 'log10') +
expand_limits(x = 1) +
theme_classic() +
ylab("") +
xlab("Odds ratio (95% CI, log scale)")
}
return(res)
}
tmp <- df_match1 %>%
enrichmentPlot(., ont_hpo, forest = T)
tmp$forest
tmp <- df_match2 %>%
enrichmentPlot(., ont_hpo, forest = T)
tmp$forest
tmp <- df_match3 %>%
enrichmentPlot(., ont_hpo, forest = T)
tmp$forest
tmp <- df_match4 %>%
enrichmentPlot(., ont_hpo, forest = T)
tmp$forest
tmp <- df_match5 %>%
enrichmentPlot(., ont_hpo, forest = T)
tmp$forest
