mutate(MonthsPrescription = as.numeric(round(AgePrescription/30, 0))) %>%
mutate(YearsPrescription = as.numeric(AgePrescription/365.2425))
# mutate(YearsPrescription = as.numeric(round(AgePrescription/365, 0)))
## Descriptive stats
df_med <- df_med %>%
group_by(PatientId) %>%
mutate(n_unique_asm = n_distinct(MED_NAME)) %>% # number of unique ASMs per patient
mutate(n_all_prescriptions = n_distinct(MonthsPrescription)) # number of all prescriptions per patient
## Group analysis: Heatmap (OR)
# define ASM groups, cf. doi.org/10.1007/s40263-021-00827-8
asm_map <- tibble(MED_NAME = asm_vec,
MED_GROUP = NA) %>%
mutate(MED_GROUP = case_when(
str_detect(MED_NAME, regex('felbam', ignore_case = T)) ~ 'Mixed/unknown',
str_detect(MED_NAME, regex('valpr', ignore_case = T)) ~ 'Mixed/unknown',
str_detect(MED_NAME, regex('hormon', ignore_case = T)) ~ 'Mixed/unknown',
str_detect(MED_NAME, regex('zonis', ignore_case = T)) ~ 'Mixed/unknown',
str_detect(MED_NAME, regex('rufin', ignore_case = T)) ~ 'Mixed/unknown',
str_detect(MED_NAME, regex('cannab', ignore_case = T)) ~ 'Mixed/unknown',
str_detect(MED_NAME, regex('cenob', ignore_case = T)) ~ 'Mixed/unknown',
str_detect(MED_NAME, regex('topira', ignore_case = T)) ~ 'Mixed/unknown',
str_detect(MED_NAME, regex('phenyt', ignore_case = T)) ~ 'Na',
str_detect(MED_NAME, regex('carbamaz', ignore_case = T)) ~ 'Na',
str_detect(MED_NAME, regex('carbaz', ignore_case = T)) ~ 'Na',
str_detect(MED_NAME, regex('lamotr', ignore_case = T)) ~ 'Na',
str_detect(MED_NAME, regex('lacosam', ignore_case = T)) ~ 'Na',
str_detect(MED_NAME, regex('suxim', ignore_case = T)) ~ 'Ca',
str_detect(MED_NAME, regex('gabap', ignore_case = T)) ~ 'Ca',
str_detect(MED_NAME, regex('pregabal', ignore_case = T)) ~ 'Ca',
str_detect(MED_NAME, regex('phenobarb', ignore_case = T)) ~ 'GABA',
str_detect(MED_NAME, regex('primidon', ignore_case = T)) ~ 'GABA',
str_detect(MED_NAME, regex('stirip', ignore_case = T)) ~ 'GABA',
str_detect(MED_NAME, regex('azol', ignore_case = T)) ~ 'GABA',
str_detect(MED_NAME, regex('azepam', ignore_case = T)) ~ 'GABA',
str_detect(MED_NAME, regex('clobaz', ignore_case = T)) ~ 'GABA',
str_detect(MED_NAME, regex('tiaga', ignore_case = T)) ~ 'GABA',
str_detect(MED_NAME, regex('vigabatr', ignore_case = T)) ~ 'GABA',
str_detect(MED_NAME, regex('peramp', ignore_case = T)) ~ 'AMPA',
str_detect(MED_NAME, regex('brivara', ignore_case = T)) ~ 'SV2A',
str_detect(MED_NAME, regex('levetir', ignore_case = T)) ~ 'SV2A',
str_detect(MED_NAME, regex('fenfl', ignore_case = T)) ~ '5-HT',
str_detect(MED_NAME, regex('everol', ignore_case = T)) ~ 'MTOR'
) )
# take strict matched case-control set
df_heatmap <- df_match1 %>%
# merge in patient ID and group label
distinct(PatientId, group) %>%
left_join(df_med, by = "PatientId") %>%
na.omit %>%
# define bins
mutate(YearsPrescription = cut_number(YearsPrescription, 4)) %>%
# count ASM prescription per group; for each age bin (year)
group_by(group, MED_NAME, YearsPrescription) %>%
summarize(test = n()) %>%
# prepare Fisher's test
pivot_wider(names_from = group, values_from = test) %>%
rename(N = `FALSE`, Y = `TRUE`) %>%
# force complete all cases
complete(MED_NAME, YearsPrescription) %>%
replace(is.na(.), 0) %>%
mutate(N_out = max(N)-N,
Y_out = max(Y)-Y) %>%
rowwise() %>%
# do Fisher's test
mutate(P = fisher.test(matrix(c(Y, Y_out, N, N_out), nrow = 2, ncol = 2))$p.value,
OR = fisher.test(matrix(c(Y, Y_out, N, N_out), nrow = 2, ncol = 2))$estimate,
CI1 = fisher.test(matrix(c(Y, Y_out, N, N_out), nrow = 2, ncol = 2))$conf.int[[1]],
CI2 = fisher.test(matrix(c(Y, Y_out, N, N_out), nrow = 2, ncol = 2))$conf.int[[2]]) %>%
# adjust for multiple testing
mutate(P = p.adjust(P, method = "bonferroni")) %>%
# force OR with insignificant pvalues to be NA
mutate(OR = ifelse(P > 0.05, NA, OR)) %>%
# merge in group description for facets
left_join(asm_map, by = "MED_NAME") %>%
# define factor levels
mutate(MED_NAME = factor(MED_NAME, levels = sort(unique(asm_vec)))) %>%
# frequency filter
ungroup() %>%
mutate(freqY = Y/max(Y)) %>%
mutate(freqN = N/max(N)) %>%
filter(freqY > 0.01 & freqN > 0.01)
# plot
p_asm <- df_heatmap %>%
mutate(MED_NAME = str_to_title(MED_NAME)) %>%
ggplot(aes(x = YearsPrescription,
y = MED_NAME,
fill = log10(OR))) +
geom_tile(color = "black") +
geom_text(aes(label = round(OR, 1)), size = 4) +
theme_classic() +
facet_grid(MED_GROUP~., scales = "free_y", space = "free",
switch = "y", drop = FALSE, margins = FALSE) +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, colour = NA),
panel.spacing = unit(0.2, "cm")) +
ylab("") +
xlab("Age (years)") +
scale_x_discrete(labels = c("0-2", "2-4", "4-8", ">8")) +
scale_fill_gradient2(low = "#00b4fb",
mid = "#F5F5F5",
high = "#ff8422",
midpoint = 0, # adjust based on OR or log OR
na.value = "#F5F5F5",
limits = c(-2, 2),
oob = scales::oob_squish_any)
### GENERATE REPORT -----------------------------------------------------------
## Figure 1: Descriptive statistics of the study cohort.
p_tmp <- cowplot::plot_grid(p2 + scale_x_discrete(labels=c("Non-genetic", "Genetic")),
p3 + scale_x_discrete(labels=c("Non-genetic", "Genetic")),
p4 + theme(legend.position = "none"),
p5 + theme(legend.position = "none"),
nrow = 2, labels = c("B", "C", "D", "E"))
Fig1 <- cowplot::plot_grid(p1, p_tmp, rel_widths = c(1/2, 1/2), labels = c("A", ""))
pdf(file = "/Users/cbosselmann/Desktop/GitHub/UMLS-HPO/out/pub_genetic/Fig1.pdf",
width = 12,
height = 6)
Fig1
dev.off()
## Figure 2: Genetic vs. Non-Genetic
p_tmp <- cowplot::plot_grid(enrich1$plot +
ggtitle("") +
theme_set(theme_classic()) +
coord_cartesian(xlim = c(0, 0.15), ylim = c(0, 0.15)) +
ylab("Genetic patients") +
xlab("Non-genetic patients"),
enrich1$forest,
nrow = 1, labels = "AUTO")
Fig2 <- cowplot::plot_grid(p_tmp, plong1$plot,
nrow = 2,
labels = c("", "C"))
pdf(file = "/Users/cbosselmann/Desktop/GitHub/UMLS-HPO/out/pub_genetic/Fig2.pdf",
width = 12,
height = 12)
Fig2
dev.off()
## Figure 3: SCN1A vs. Non-Genetic
p_tmp <- cowplot::plot_grid(enrich4$plot +
ggtitle("") +
theme_set(theme_classic()) +
coord_cartesian(xlim = c(0, 0.3), ylim = c(0, 0.3)) +
ylab("SCN1A") +
xlab("Non-genetic patients"),
enrich4$forest,
nrow = 1, labels = "AUTO")
Fig3 <- cowplot::plot_grid(p_tmp, plong4$plot,
nrow = 2,
labels = c("", "C"))
pdf(file = "/Users/cbosselmann/Desktop/GitHub/UMLS-HPO/out/pub_genetic/Fig3.pdf",
width = 12,
height = 12)
Fig3
dev.off()
## Figure 3.1: SCN1A vs. Genetic
p_tmp <- cowplot::plot_grid(enrich2$plot +
ggtitle("") +
theme_set(theme_classic()) +
coord_cartesian(xlim = c(0, 0.3), ylim = c(0, 0.3)) +
ylab("SCN1A") +
xlab("Genetic patients"),
enrich2$forest,
nrow = 1, labels = "AUTO")
Fig3.1 <- cowplot::plot_grid(p_tmp, plong2$plot,
nrow = 2,
labels = c("", "C"))
pdf(file = "/Users/cbosselmann/Desktop/GitHub/UMLS-HPO/out/pub_genetic/Fig3.1.pdf",
width = 12,
height = 12)
Fig3.1
dev.off()
## Figure 4: CDKL5 vs. Non-Genetic
p_tmp <- cowplot::plot_grid(enrich5$plot +
ggtitle("") +
theme_set(theme_classic()) +
coord_cartesian(xlim = c(0, 0.3), ylim = c(0, 0.3)) +
ylab("CDKL5") +
xlab("Non-genetic patients"),
enrich5$forest,
nrow = 1, labels = "AUTO")
Fig4 <- cowplot::plot_grid(p_tmp, plong5$plot + coord_cartesian(xlim = c(0, 12)),
nrow = 2,
labels = c("", "C"))
pdf(file = "/Users/cbosselmann/Desktop/GitHub/UMLS-HPO/out/pub_genetic/Fig4.pdf",
width = 12,
height = 12)
Fig4
dev.off()
## Figure 4.1: CDKL5 vs. Genetic
p_tmp <- cowplot::plot_grid(enrich3$plot +
ggtitle("") +
theme_set(theme_classic()) +
coord_cartesian(xlim = c(0, 0.3), ylim = c(0, 0.3)) +
ylab("CDKL5") +
xlab("Genetic patients"),
enrich3$forest,
nrow = 1, labels = "AUTO")
Fig4.1 <- cowplot::plot_grid(p_tmp, plong3$plot + coord_cartesian(xlim = c(0, 12)),
nrow = 2,
labels = c("", "C"))
pdf(file = "/Users/cbosselmann/Desktop/GitHub/UMLS-HPO/out/pub_genetic/Fig4.1.pdf",
width = 12,
height = 12)
Fig4.1
dev.off()
## Figure 5: TSC vs. Non-Genetic
p_tmp <- cowplot::plot_grid(enrich7$plot +
ggtitle("") +
theme_set(theme_classic()) +
coord_cartesian(xlim = c(0, 0.3), ylim = c(0, 0.3)) +
ylab("TSC") +
xlab("Non-genetic patients"),
enrich7$forest,
nrow = 1, labels = "AUTO")
Fig5 <- cowplot::plot_grid(p_tmp, plong7$plot,
nrow = 2,
labels = c("", "C"))
pdf(file = "/Users/cbosselmann/Desktop/GitHub/UMLS-HPO/out/pub_genetic/Fig5.pdf",
width = 12,
height = 12)
Fig5
dev.off()
## Figure 5.1: TSC vs. Genetic
p_tmp <- cowplot::plot_grid(enrich7$plot +
ggtitle("") +
theme_set(theme_classic()) +
coord_cartesian(xlim = c(0, 0.3), ylim = c(0, 0.3)) +
ylab("TSC") +
xlab("Genetic patients"),
enrich7$forest,
nrow = 1, labels = "AUTO")
Fig5.1 <- cowplot::plot_grid(p_tmp, plong7$plot,
nrow = 2,
labels = c("", "C"))
pdf(file = "/Users/cbosselmann/Desktop/GitHub/UMLS-HPO/out/pub_genetic/Fig5.1.pdf",
width = 12,
height = 12)
Fig5.1
dev.off()
### Figure 6: Prescription patterns of genetic vs. non-genetic patients
pdf(file = "/Users/cbosselmann/Desktop/GitHub/UMLS-HPO/out/pub_genetic/Fig6.pdf",
width = 8,
height = 8)
p_asm
dev.off()
df_person
df_person
length(df_person$PatientId)
tbl_person
p1$data
df
df %>%
n_distinct(ConceptID)
df %>%
ungroup %>%
n_distinct(ConceptID)
unique(df$ConceptID)
length(unique(df$ConceptID))
stats_encounters
df_encounters
df_match
df_match1
length(unique(df_match1$term))
stats_encounters_age
df_encounters
p1
p1$data
p1$data %>%
mutate(dur = upper-lower)
p1$data %>%
mutate(dur = upper-lower) %>%
summarize(mean = mean(dur), median = median(dur),
sd = sd(dur), min = min(dur), max = max(dur))
6.54*1671
df
length(unique(df_genes_mapped$term))
length(unique(df_genes_mapped$ConceptID))
df_genes_mapped
p2$data
p3$guides
p3$labels
p3$layers
p3$theme
p3
?stat_compare_means
ggplot(data = df, aes(x = GENEPOS_comb, y = ProcAge, fill = GENEPOS_comb)) +
geom_flat_violin(position = position_nudge(x = .1, y = 0), alpha = .8) +
guides(fill = "none", color = "none") +
scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2") +
xlab("Group") +
ylab("Age at diagnosis") +
theme_classic() +
coord_cartesian(xlim = c(1.5, 2), ylim = c(0, 7)) +
geom_boxplot(width = .1, show.legend = FALSE, outlier.shape = NA, alpha = 0.5) +
ggpubr::stat_compare_means(
comparisons = list(c("N", "Y")),
label.x = 1.5, label.y = c(6))
df[df$GENEPOS_comb == "Y"]
df[df$GENEPOS_comb == "Y", ]$ProcAge
mean(df[df$GENEPOS_comb == "Y", ]$ProcAge)
mean(df[df$GENEPOS_comb == "N", ]$ProcAge)
mean(df[df$GENEPOS_comb == "N", ]$ContactAge)
mean(df[df$GENEPOS_comb == "Y", ]$ContactAge)
ggplot(data = df, aes(x = GENEPOS_comb, y = ContactAge, fill = GENEPOS_comb)) +
geom_flat_violin(position = position_nudge(x = .1, y = 0), alpha = .8) +
guides(fill = "none", color = "none") +
scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2") +
xlab("Group") +
ylab("Age at encounter") +
theme_classic() +
coord_cartesian(xlim = c(1.5, 2)) +
geom_boxplot(width = .1, show.legend = FALSE, outlier.shape = NA, alpha = 0.5) +
ggpubr::stat_compare_means(
comparisons = list(c("N", "Y")),
label.x = 1.5, label.y = c(20))
p4
df_encounters_freq
# get summary stats during transition (age range 18-20 years)
df_encounters %>%
filter(bin %in% c(18, 19, 20))
view(df_encounters_freq)
# get summary stats during transition (age range 18-20 years)
df_encounters_freq %>%
filter(bin %in% c(18, 19, 20))
# get summary stats during transition (age range 18-20 years)
df_encounters_freq %>%
filter(bin %in% c(18, 19, 20)) %>%
group_by(GENEPOS_comb) %>%
summarize(mean = mean(mean), sd = sd(mean))
# get summary stats during transition (age range 18-20 years)
df_encounters_freq %>%
filter(bin %in% c(18, 19, 20)) %>%
group_by(GENEPOS_comb) %>%
summarize(mean = mean(mean), sd = mean(sd))
df_encounters_freq
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
select(-ConceptID) %>%
distinct(PatientId, GENEPOS_comb, ContactAge) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F))
df_encounters_freq
df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb)
# df_encounters_freq <-
df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(mean = mean(n), sd = sd(n),
summarize(pval = t.test(count ~ GENEPOS_comb)$p.value))
df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb)
# df_encounters_freq <-
df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(mean = mean(n), sd = sd(n),
summarize(pval = t.test(n ~ GENEPOS_comb)$p.value))
# df_encounters_freq <-
df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(mean = mean(n), sd = sd(n),
summarize(pval = t.test(n ~.)$p.value))
df_encounters_freq <-
df_encounters_freq %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(mean = mean(n), sd = sd(n))
df_encounters_freq
df
df %>%
group_by(PatientId) %>%
select(-ConceptID) %>%
distinct(PatientId, GENEPOS_comb, ContactAge) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F))
# get summary stats during transition (age range 18-20 years)
df_encounters_freq %>%
filter(bin %in% c(18, 19, 20)) %>%
group_by(GENEPOS_comb) %>%
summarize(mean = mean(mean), sd = mean(sd))
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
select(-ConceptID) %>%
distinct(PatientId, GENEPOS_comb, ContactAge) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F)) %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(mean = mean(n), sd = sd(n))
# get summary stats during transition (age range 18-20 years)
df_encounters_freq %>%
filter(bin %in% c(18, 19, 20)) %>%
group_by(GENEPOS_comb) %>%
summarize(mean = mean(mean), sd = mean(sd))
# get summary stats during transition (age range 18-20 years)
stats_encounters_freq <- df %>%
group_by(PatientId) %>%
select(-ConceptID) %>%
distinct(PatientId, GENEPOS_comb, ContactAge) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F)) %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb)
stats_encounters_freq
# get summary stats during transition (age range 18-20 years)
stats_encounters_freq <- df %>%
group_by(PatientId) %>%
select(-ConceptID) %>%
distinct(PatientId, GENEPOS_comb, ContactAge) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F)) %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
# age filter for transition
filter(bin %in% c(18, 19, 20)) %>%
group_by(GENEPOS_comb)
# get summary stats during transition (age range 18-20 years)
df %>%
group_by(PatientId) %>%
select(-ConceptID) %>%
distinct(PatientId, GENEPOS_comb, ContactAge) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F)) %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
# age filter for transition
filter(bin %in% c(18, 19, 20)) %>%
group_by(GENEPOS_comb)
# get summary stats during transition (age range 18-20 years)
df %>%
group_by(PatientId) %>%
select(-ConceptID) %>%
distinct(PatientId, GENEPOS_comb, ContactAge) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F)) %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
# age filter for transition
filter(bin %in% c(18, 19, 20)) %>%
ungroup() %>%
summarize(pval = t.test(n ~ GENEPOS_comb)$p.value)
df_encounters_freq
# plot encounter frequency over time
df_encounters_freq <- df %>%
group_by(PatientId) %>%
select(-ConceptID) %>%
distinct(PatientId, GENEPOS_comb, ContactAge) %>%
count(cut_width(ContactAge, width = 1, boundary = 0, labels = F)) %>%
ungroup() %>%
# maintain group label
left_join(df_encounters[ ,c("GENEPOS_comb", "PatientId")], by = "PatientId") %>%
# fix bin label
rename(bin = `cut_width(ContactAge, width = 1, boundary = 0, labels = F)`) %>%
group_by(bin, GENEPOS_comb) %>%
# get mean number of encounters per bin per group
summarize(mean = mean(n), sd = sd(n))
df_encounters_freq
stats_encounters_age
p_encounters_age
df_asm
length(unique(df_asm$MedicalRecordNumber))
df_heatmap
view(df_heatmap)
p_asm
view(enrich1$forest$data)
view(enrich1$plot$data)
enrich1$plot
